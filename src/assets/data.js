export const data = {
  testName: ".NET Test",
  questions: [
    {
      question: "Які виняток не можна зупинити в блоці catch?",
      answers: [
        {
          answer: "StackOverflowException",
          isCorrect: true,
        },
        {
          answer: "ArgumentNullException",
          isCorrect: false,
        },
        {
          answer: "DllNotFoundException",
          isCorrect: false,
        },
        {
          answer: "NullReferenceException",
          isCorrect: false,
        }
      ],
    },
    {
      question: "Що таке Kestrel?",
      answers: [
        {
          answer: "Kestrel - це веб-сервер, що використовується для розгортання та запуску веб-додатків на платформі .NET Core.",
          isCorrect: true,
        },
        {
          answer: "Kestrel - це фреймворк для створення ігор на мові програмування C#.",
          isCorrect: false,
        },
        {
          answer: "Kestrel - це база даних, яка використовується для зберігання конфігураційних даних в .NET Core",
          isCorrect: false,
        },
        {
          answer: "Kestrel - це редактор коду для розробки програм на мові програмування Java.",
          isCorrect: false,
        }
      ],
    },
    {
      question: "Що таке асинхронне програмування в .NET, і яке його призначення?",
      answers: [
        {
          answer: "Підхід до розробки програм, в яких використовуються асинхронні операції для підвищення ефективності та масштабованості.",
          isCorrect: true,
        },
        {
          answer: "Методологія розробки програм, яка передбачає використання виключень для обробки асинхронних подій та помилок.",
          isCorrect: false,
        },
        {
          answer: "Процес взаємодії програми з базою даних за допомогою асинхронних SQL запитів.",
          isCorrect: false,
        },
        {
          answer: "Методика розробки програм, що передбачає використання паралельних потоків для підвищення швидкодії.",
          isCorrect: false,
        }
      ],
    },
    {
      question: "Що таке Dependency Injection (DI) і яке його значення для .NET розробки?",
      answers: [
        {
          answer: "Процес передачі залежностей в об'єкт зовнішніми засобами, зазвичай через конструктор, властивості або методи.",
          isCorrect: true,
        },
        {
          answer: "Техніка розробки програм, що передбачає використання інтерфейсів для зведення залежностей до мінімуму.",
          isCorrect: false,
        },
        {
          answer: "Підхід до створення мобільних додатків на платформі Android у середовищі .NET.",
          isCorrect: false,
        },
        {
          answer: "Методологія вирішення проблем із безпекою даних у програмах на мові програмування C#.",
          isCorrect: false,
        }
      ],
    },
    {
      question: "Що таке аспектно-орієнтоване програмування (Aspect-Oriented Programming, AOP) і як воно використовується в .NET?",
      answers: [
        {
          answer: "Методологія, яка дозволяє відокремити крос-вирішені аспекти, такі як логування, аудит, транзакції, від основної бізнес-логіки програми.",
          isCorrect: true,
        },
        {
          answer: "Підхід до розробки, що передбачає використання виключень для обробки крос-вирішених аспектів.",
          isCorrect: false,
        },
        {
          answer: "Методика, яка ставить за мету забезпечити взаємодію різних компонентів програми за допомогою аспектів.",
          isCorrect: false,
        },
        {
          answer: "Підхід до розробки, що базується на використанні аспектів для моделювання бізнес-процесів.",
          isCorrect: false,
        }
      ],
    }
  ]
};